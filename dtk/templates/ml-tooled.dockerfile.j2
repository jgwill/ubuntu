# ML Tooled Development Environment Template
# Full machine learning and data science stack
FROM jgwill/ubuntu:py-node

ARG pip_cur=pip{{ python_config.version }}
ARG nodeversion=20.x

WORKDIR /work

# Update system packages
RUN \
    --mount=type=cache,target=/var/cache/apt \
	apt update && \
	apt upgrade -y

# Install additional development libraries
RUN \
    --mount=type=cache,target=/var/cache/apt \
	apt install -y libfreetype6-dev graphviz default-jre ant

# Upgrade Python package tools
RUN \
    --mount=type=cache,target=/root/.cache \
         pip install -U pip wheel setuptools

# ML and Data Science repository setup
WORKDIR /repos

RUN echo "update-250124">> /_updated.txt

# Code Server for web-based development
RUN \
    --mount=type=cache,target=/root/.cache \
	curl -fsSL https://code-server.dev/install.sh | sh

# Setup server scripts
WORKDIR /opt
COPY run_code_server.sh run_kada_server.sh

RUN cp run_kada_server.sh run_code_server.sh && \ 
	chmod a+x run_kada_server.sh run_code_server.sh

# Install global Node.js packages for development
RUN \
    --mount=type=cache,target=/root/.npm \
        npm install npm yarn @angular/cli --g

# Create Angular test project (for build cache)
WORKDIR /tmp
RUN \
    --mount=type=cache,target=/root/.npm \
	ng new my-app --defaults && rm -rf my-app

WORKDIR /svr/code-server

# Core ML and visualization packages
RUN \
    --mount=type=cache,target=/root/.cache \
 	pip install python-dotenv kaleido mplfinance 

# Advanced ML and development packages
RUN \
    --mount=type=cache,target=/root/.cache \
        pip install scikit-learn shell-genie seaborn Sphinx poetry html2text dropbox fastapi_poe openai 

# System utilities and Lua integration
RUN \
    --mount=type=cache,target=/var/cache/apt \
        DEBIAN_FRONTEND=noninteractive apt update && apt install -y luarocks python3-urllib3 python3-requests ssh-import-id  libc6-dbg && \
         luarocks install http && \
	 luarocks install LuaFileSystem

# Google Cloud Platform integration
RUN \
    --mount=type=cache,target=/var/cache/apt \
        apt update &&        apt -y install apt-transport-https ca-certificates gnupg curl

RUN \
    --mount=type=cache,target=/root/.cache \
        pip install google-cloud-aiplatform

# Google Cloud CLI setup
RUN curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg && echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list

RUN \
 --mount=type=cache,target=/var/cache/apt \
        apt update && apt install google-cloud-cli -y \
        && apt autoremove -y

WORKDIR /work
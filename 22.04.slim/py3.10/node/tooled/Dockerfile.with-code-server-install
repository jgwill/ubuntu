# syntax=jgwill/dev:dockerfile-1.4

#FROM jgwill/ubuntu:18.04-py3.7.2-lzma
FROM jgwill/ubuntu:18.04-py3.7.2-lzma-node
ARG pip_parent=pip3.7
ARG pip_cur=pip3.10
ARG nodeversion=16.x


WORKDIR /root

WORKDIR /work

#RUN npm --version
RUN \
    --mount=type=cache,target=/root/.npm \
 	npm install npm --g && \
	npm install tlid droxul http-server \
 	node-gyp   \
        json2bash   \
        typescript  \
         thumbsup yarn --g





# Code Server 
RUN \
    --mount=type=cache,target=/root/.cache \
	curl -fsSL https://code-server.dev/install.sh | sh

#TODO Install the Extension in here
WORKDIR /svr/code-server/code-server-ext
COPY code-server-ext .

#DISABLED because they are by userI
RUN ls *vsix &>/dev/null && for x in $(ls *vsix) ;do   echo "Installing $x";/usr/bin/code-server --install-extension /admin  "$x"; done && echo "Installed code-server extensions..." > ../log-dkbuild.txt ||  echo "Failed code-server extensions installation..." > ../log-dkbuild.txt
WORKDIR /svr/code-server
RUN rm -rf code-server-ext && \
	cp ~/.config/code-server/config.yaml .
#RUN for x in $(code-server --list-extensions);do code-server --install-extension /admin $x --force;done

WORKDIR /opt
COPY run_code_server.sh run_kada_server.sh
RUN cp run_kada_server.sh run_code_server.sh && \ 
	chmod a+x run_kada_server.sh run_code_server.sh


#221022 upgrade after mastering Python/DataPrep
#RUN \
#    --mount=type=cache,target=/root/.cache \
#	$pip_cur install plotly-express pyshp colorcet networkx
#RUN $pip_cur install seaborn
#RUN pip3.7 install  pyodbc urlopen colour plotly bokeh dropbox notebook ipywidgets

#RUN $pip_cur install pyshp colorcet networkx
#RUN $pip_cur install colorcet
#RUN $pip_cur install networkx
#RUN \
#    --mount=type=cache,target=/root/.cache \
#	$pip_cur install google.colab

#RUN pip install -U pip wheel setuptools

#RUN \
#    --mount=type=cache,target=/var/cache/apt \
#	apt install python3-urllib3 python3-requests ssh-import-id  libc6-dbg -y


RUN \
    --mount=type=cache,target=/root/.npm \
        npm install npm yarn @angular/cli --g

WORKDIR /tmp
RUN \
    --mount=type=cache,target=/root/.npm \
	ng new my-app --defaults && rm -rf my-app

WORKDIR /svr/code-server
#RUN rm -rf code-server-ext && cp ~/.config/code-server/config.yaml .
RUN for x in $(code-server --list-extensions);do code-server --install-extension /admin $x --force;done
#RUN cp ~/.config/code-server/config.yaml .
WORKDIR /work


